{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\GoStack Bootcamp\\\\Nivel 1\\\\Desafio 3 - FrontEnd com React\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport api from './services/api';\nimport \"./styles.css\";\n\nfunction App() {\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    api.get('repositories').then(response => {\n      setRepositories(response.data);\n    });\n  }, []);\n\n  async function handleAddRepository() {\n    const response = await api.post('repositories', {\n      title: `Novo repositorio ${Date.now()}`,\n      url: 'www.teste.com',\n      techs: ['ReactJS', 'PHP']\n    });\n    const repo = response.data;\n    setRepositories([...repositories, repo]);\n  }\n\n  async function handleRemoveRepository(id) {// TODO\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-testid\": \"repository-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(\"li\", {\n    key: repository.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 42\n    }\n  }, repository.title, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleRemoveRepository(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Remover\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Adicionar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/User/Desktop/GoStack Bootcamp/Nivel 1/Desafio 3 - FrontEnd com React/src/App.js"],"names":["React","useState","useEffect","api","App","repositories","setRepositories","get","then","response","data","handleAddRepository","post","title","Date","now","url","techs","repo","handleRemoveRepository","id","map","repository"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,OAAO,cAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACEC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,GAAG,CAACI,GAAJ,CAAQ,cAAR,EAAwBC,IAAxB,CAA6BC,QAAQ,IAAI;AACrCH,MAAAA,eAAe,CAACG,QAAQ,CAACC,IAAV,CAAf;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAMF,iBAAeC,mBAAf,GAAqC;AACnC,UAAMF,QAAQ,GAAG,MAAMN,GAAG,CAACS,IAAJ,CAAS,cAAT,EAAyB;AACxCC,MAAAA,KAAK,EAAG,oBAAmBC,IAAI,CAACC,GAAL,EAAW,EADE;AAExCC,MAAAA,GAAG,EAAE,eAFmC;AAGxCC,MAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,KAAZ;AAHiC,KAAzB,CAAvB;AAMI,UAAMC,IAAI,GAAGT,QAAQ,CAACC,IAAtB;AAEAJ,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBa,IAAlB,CAAD,CAAf;AACL;;AAED,iBAAeC,sBAAf,CAAsCC,EAAtC,EAA0C,CACxC;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,YAAY,CAACgB,GAAb,CAAiBC,UAAU,iBAAG;AAAI,IAAA,GAAG,EAAEA,UAAU,CAACF,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBE,UAAU,CAACT,KAApC,eAE/B;AAAQ,IAAA,OAAO,EAAE,MAAMM,sBAAsB,CAAC,CAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAF+B,eAK/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAL+B,CAA9B,CADL,CADF,eAWE;AAAQ,IAAA,OAAO,EAAER,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXF,CADF;AAgBD;;AAED,eAAeP,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from './services/api';\n\nimport \"./styles.css\";\n\nfunction App() {\n  const [repositories, setRepositories] = useState([]);\n    useEffect(() => {\n        api.get('repositories').then(response => {\n            setRepositories(response.data);\n        });\n    }, []);\n\n  async function handleAddRepository() {\n    const response = await api.post('repositories', {\n            title: `Novo repositorio ${Date.now()}`,\n            url: 'www.teste.com',\n            techs: ['ReactJS', 'PHP'],\n        })\n\n        const repo = response.data;\n\n        setRepositories([...repositories, repo]);\n  }\n\n  async function handleRemoveRepository(id) {\n    // TODO\n  }\n\n  return (\n    <div>\n      <ul data-testid=\"repository-list\">\n          {repositories.map(repository =><li key={repository.id}>{repository.title}\n\n          <button onClick={() => handleRemoveRepository(1)}>\n            Remover\n          </button>\n          <br />\n          </li>)}\n      </ul>\n\n      <button onClick={handleAddRepository}>Adicionar</button>\n    </div>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}