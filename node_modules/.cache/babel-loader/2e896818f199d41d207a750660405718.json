{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\GoStack Bootcamp\\\\Nivel 1\\\\Desafio 3 - FrontEnd com React\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport api from './services/api';\nimport \"./styles.css\";\n\nfunction App() {\n  const [repo, setRepositories] = useState([]);\n  useEffect(() => {\n    api.get('repo').then(response => {\n      setRepositories(response.data);\n    });\n  }, []);\n\n  async function handleAddRepository() {\n    const response = await api.post('repositories', {\n      title: `Novo repositorio ${Date.now()}`,\n      url: 'www.teste.com',\n      techs: 'ReactJS'\n    });\n    const repo = response.data;\n    setRepositories([...repositories, repo]);\n  }\n\n  async function handleRemoveRepository(id) {// TODO\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-testid\": \"repository-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, repo.map(repo => /*#__PURE__*/React.createElement(\"li\", {\n    key: repo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, repo.title)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleRemoveRepository(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Remover\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Adicionar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/User/Desktop/GoStack Bootcamp/Nivel 1/Desafio 3 - FrontEnd com React/src/App.js"],"names":["React","useState","useEffect","api","App","repo","setRepositories","get","then","response","data","handleAddRepository","post","title","Date","now","url","techs","repositories","handleRemoveRepository","id","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,OAAO,cAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAOC,eAAP,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACEC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,GAAG,CAACI,GAAJ,CAAQ,MAAR,EAAgBC,IAAhB,CAAqBC,QAAQ,IAAI;AAC7BH,MAAAA,eAAe,CAACG,QAAQ,CAACC,IAAV,CAAf;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAMF,iBAAeC,mBAAf,GAAqC;AACnC,UAAMF,QAAQ,GAAG,MAAMN,GAAG,CAACS,IAAJ,CAAS,cAAT,EAAyB;AACxCC,MAAAA,KAAK,EAAG,oBAAmBC,IAAI,CAACC,GAAL,EAAW,EADE;AAExCC,MAAAA,GAAG,EAAE,eAFmC;AAGxCC,MAAAA,KAAK,EAAE;AAHiC,KAAzB,CAAvB;AAMI,UAAMZ,IAAI,GAAGI,QAAQ,CAACC,IAAtB;AAEAJ,IAAAA,eAAe,CAAC,CAAC,GAAGY,YAAJ,EAAkBb,IAAlB,CAAD,CAAf;AACL;;AAED,iBAAec,sBAAf,CAAsCC,EAAtC,EAA0C,CACxC;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,IAAI,CAACgB,GAAL,CAAShB,IAAI,iBAAI;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACe,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBf,IAAI,CAACQ,KAAxB,CAAjB,CADH,eAGE;AAAQ,IAAA,OAAO,EAAE,MAAMM,sBAAsB,CAAC,CAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF,CADF,eAWE;AAAQ,IAAA,OAAO,EAAER,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXF,CADF;AAeD;;AAED,eAAeP,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from './services/api';\n\nimport \"./styles.css\";\n\nfunction App() {\n  const [repo, setRepositories] = useState([]);\n    useEffect(() => {\n        api.get('repo').then(response => {\n            setRepositories(response.data);\n        });\n    }, []);\n\n  async function handleAddRepository() {\n    const response = await api.post('repositories', {\n            title: `Novo repositorio ${Date.now()}`,\n            url: 'www.teste.com',\n            techs: 'ReactJS'\n        })\n\n        const repo = response.data;\n\n        setRepositories([...repositories, repo]);\n  }\n\n  async function handleRemoveRepository(id) {\n    // TODO\n  }\n\n  return (\n    <div>\n      <ul data-testid=\"repository-list\">\n        <li>\n          {repo.map(repo => <li key={repo.id}>{repo.title}</li>)}\n\n          <button onClick={() => handleRemoveRepository(1)}>\n            Remover\n          </button>\n        </li>\n      </ul>\n\n      <button onClick={handleAddRepository}>Adicionar</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}