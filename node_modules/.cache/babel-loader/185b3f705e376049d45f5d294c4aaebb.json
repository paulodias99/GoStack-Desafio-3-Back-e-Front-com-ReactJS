{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\GoStack Bootcamp\\\\Nivel 1\\\\Desafio 3 - FrontEnd com React\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport api from \"./services/api\";\nimport \"./styles.css\";\n\nfunction App() {\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    api.get(\"repositories\").then(response => {\n      setRepositories(response.data);\n    }).catch(err => {\n      console.log(\"App -> err\", err);\n    });\n  }, []);\n\n  async function handleAddRepository() {\n    const response = await api.post(\"repositories\", {\n      title: \"Teste\",\n      url: \"teste.com.br\",\n      techs: [\"React\", \"NodeJS\", \"React Native\"]\n    });\n    setRepositories([...repositories, response.data]);\n  }\n\n  async function handleRemoveRepository(id) {\n    await api.delete(`repositories/${id}`);\n    setRepositories(repositories.filter(repository => repository.id !== id));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-testid\": \"repository-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(\"li\", {\n    key: repository.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, repository.title, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleRemoveRepository(repository.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Remover\")))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Adicionar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/User/Desktop/GoStack Bootcamp/Nivel 1/Desafio 3 - FrontEnd com React/src/App.js"],"names":["React","useEffect","useState","api","App","repositories","setRepositories","get","then","response","data","catch","err","console","log","handleAddRepository","post","title","url","techs","handleRemoveRepository","id","delete","filter","repository","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,OAAO,cAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,GAAG,CACAI,GADH,CACO,cADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClBH,MAAAA,eAAe,CAACG,QAAQ,CAACC,IAAV,CAAf;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,GAA1B;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;;AAWA,iBAAeG,mBAAf,GAAqC;AACnC,UAAMN,QAAQ,GAAG,MAAMN,GAAG,CAACa,IAAJ,CAAS,cAAT,EAAyB;AAC9CC,MAAAA,KAAK,EAAE,OADuC;AAE9CC,MAAAA,GAAG,EAAE,cAFyC;AAG9CC,MAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,cAApB;AAHuC,KAAzB,CAAvB;AAMAb,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBI,QAAQ,CAACC,IAA3B,CAAD,CAAf;AACD;;AAED,iBAAeU,sBAAf,CAAsCC,EAAtC,EAA0C;AACxC,UAAMlB,GAAG,CAACmB,MAAJ,CAAY,gBAAeD,EAAG,EAA9B,CAAN;AAEAf,IAAAA,eAAe,CAACD,YAAY,CAACkB,MAAb,CAAoBC,UAAU,IAAIA,UAAU,CAACH,EAAX,KAAkBA,EAApD,CAAD,CAAf;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,YAAY,CAACoB,GAAb,CAAkBD,UAAD,iBAChB;AAAI,IAAA,GAAG,EAAEA,UAAU,CAACH,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,UAAU,CAACP,KADd,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAMG,sBAAsB,CAACI,UAAU,CAACH,EAAZ,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADD,CADH,CADF,eAYE;AAAQ,IAAA,OAAO,EAAEN,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZF,CADF;AAgBD;;AAED,eAAeX,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport api from \"./services/api\";\n\nimport \"./styles.css\";\n\nfunction App() {\n  const [repositories, setRepositories] = useState([]);\n\n  useEffect(() => {\n    api\n      .get(\"repositories\")\n      .then((response) => {\n        setRepositories(response.data);\n      })\n      .catch((err) => {\n        console.log(\"App -> err\", err);\n      });\n  }, []);\n\n  async function handleAddRepository() {\n    const response = await api.post(\"repositories\", {\n      title: \"Teste\",\n      url: \"teste.com.br\",\n      techs: [\"React\", \"NodeJS\", \"React Native\"],\n    });\n\n    setRepositories([...repositories, response.data]);\n  }\n\n  async function handleRemoveRepository(id) {\n    await api.delete(`repositories/${id}`);\n    \n    setRepositories(repositories.filter(repository => repository.id !== id))\n  }\n\n  return (\n    <div>\n      <ul data-testid=\"repository-list\">\n        {repositories.map((repository) => (\n          <li key={repository.id}>\n            {repository.title}\n            <button onClick={() => handleRemoveRepository(repository.id)}>\n              Remover\n            </button>\n          </li>\n        ))}\n      </ul>\n\n      <button onClick={handleAddRepository}>Adicionar</button>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}